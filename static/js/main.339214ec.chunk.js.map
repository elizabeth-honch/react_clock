{"version":3,"sources":["component/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","this","timerId","setInterval","Date","setState","toLocaleTimeString","clearInterval","React","Component","App","clockName","isClockVisible","toggleClock","prevState","randomName","prevName","Math","floor","random","name","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAEaA,G,MAAb,4MACEC,MAAQ,CACNC,KAAM,GAFV,kEAKuB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,IAAMH,EAAO,IAAII,KAEjB,EAAKC,SAAS,CAAEL,KAAMA,EAAKM,yBAG1B,OAZP,6CAgBIC,cAAcN,KAAKC,WAhBvB,+BAmBY,IACAF,EAASC,KAAKF,MAAdC,KAER,OACE,oCACE,2CAEG,IACAA,QA3BX,GAA2BQ,IAAMC,YCiElBC,E,4MA7DbX,MAAQ,CACNY,UAAW,EACXC,gBAAgB,G,EAGlBC,YAAc,WACZ,EAAKR,UAAS,SAAAS,GAAS,MAAK,CAC1BF,gBAAiBE,EAAUF,oB,EAI/BG,WAAa,WACX,EAAKV,UAAS,SAACW,GAOb,MAAO,CACLL,UAPcM,KAAKC,MAAsB,IAAhBD,KAAKE,e,uDAY1B,IAAD,EAC+BlB,KAAKF,MAAnCY,EADD,EACCA,UAAWC,EADZ,EACYA,eAEnB,OACE,6BACE,+CAEGD,GAIDC,GACE,kBAAC,EAAD,CAAOQ,KAAMT,IAIjB,4BACEU,KAAK,SACLC,QAASrB,KAAKY,aAGZD,EAAiB,aAAe,cAIpC,4BACES,KAAK,SACLC,QAASrB,KAAKc,YAFhB,wB,GAnDUP,IAAMC,WCDxBc,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.339214ec.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Clock extends React.Component {\n  state = {\n    date: 0,\n  }\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date = new Date();\n\n      this.setState({ date: date.toLocaleTimeString() });\n\n    //   console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <>\n        <p>\n          Current time:\n          {' '}\n          {date}\n        </p>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport './App.scss';\nimport { Clock } from './component/Clock';\n\nclass App extends React.Component {\n  state = {\n    clockName: 0,\n    isClockVisible: true,\n  }\n\n  toggleClock = () => {\n    this.setState(prevState => ({\n      isClockVisible: !prevState.isClockVisible,\n    }));\n  }\n\n  randomName = () => {\n    this.setState((prevName) => {\n      const newName = Math.floor(Math.random() * 10000);\n\n      // console.log(`\n      //   The Clock was renamed from ${prevName.clockName} to ${newName}\n      // `);\n\n      return {\n        clockName: newName,\n      };\n    });\n  };\n\n  render() {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <div>\n        <h1>\n          React ClockName:\n          {clockName}\n        </h1>\n\n        {\n          isClockVisible && (\n            <Clock name={clockName} />\n          )\n        }\n\n        <button\n          type=\"button\"\n          onClick={this.toggleClock}\n        >\n          {\n            isClockVisible ? 'Hide Clock' : 'Show Clock'\n          }\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.randomName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}